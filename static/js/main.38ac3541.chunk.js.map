{"version":3,"sources":["Cross.svg","Cross.js","Cell.js","Bingo.js","App.js","data.js","serviceWorker.js","index.js"],"names":["_line","_line2","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCross","_ref","svgRef","title","titleId","props","height","width","ref","id","className","x1","y1","x2","y2","ForwardRef","Cross","Cell","text","index","crossed","crossDispatch","onClick","style","display","Bingo","phrases","lineLength","Math","sqrt","useReducer","state","r","c","newCrossMatrix","crossMatrix","checked","bingoCount","reduce","acc","currentLine","trunc","cell","map","line","rowNum","colNum","cellIndex","randomizedData","p","sort","random","a","b","slice","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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,cACA,mBACA,gDACA,qEACA,0BACA,oBACA,kCACA,4BACA,iCACA,yBACA,sBAEA,2BACA,eACA,oBACA,uBACA,6BACA,2CACA,sCACA,iBACA,uBAEA,8CACA,6CACA,iDACA,qCACA,8CACA,qDACA,0DACA,6CAEA,oEACA,qCACA,0BAEA,iDACA,kDACA,kDACA,cACA,sBACA,+CACA,kBACA,kBACA,kBACA,kDACA,oBACA,4BACA,yBACA,YACA,yBACA,kBACA,mCACA,kCACA,oBACA,yBACA,wBACA,0BACA,8BACA,kCACA,uBACA,oBACA,yBAEA,0CACA,2CACA,uCACA,wCACA,kCACA,6BACA,gCACA,iCACA,4BACA,gDACA,wBACA,0BACA,0CACA,yBACA,2DACA,kDACA,2CACA,kBACA,cACA,wBACA,8BACA,+BACA,eACA,yCACA,qBACA,qBACA,uBACA,QAEA,mBACA,iBACA,gCAEA,kBACA,iCACA,iCACA,kCACA,uCACA,sBACA,gCACA,uBACA,8CACA,+BACA,oBACA,kCACA,2BACA,+BACA,gCACA,mCACA,UACA,aACA,8CACA,kDDhICL,KAAI,SAAAM,GAAC,MAAK,CAAE/B,KAAM+B,EAAGC,KAAMtB,KAAKuB,aAChCD,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEF,KAAOG,EAAEH,QAC1BP,KAAI,SAAAM,GAAC,OAAIA,EAAE/B,QACXoC,MAAM,EAAG,IAEC,SAASC,IACtB,OACE,qBAAK7C,UAAU,MAAf,SACE,cAAC,EAAD,CAAOgB,QAASsB,MEFFQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.38ac3541.chunk.js","sourcesContent":["var _line, _line2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCross(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 100,\n    width: 100,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _line || (_line = /*#__PURE__*/React.createElement(\"line\", {\n    className: \"line\",\n    x1: 0,\n    y1: 0,\n    x2: 100,\n    y2: 100\n  })), _line2 || (_line2 = /*#__PURE__*/React.createElement(\"line\", {\n    className: \"line\",\n    x1: 0,\n    y1: 100,\n    x2: 100,\n    y2: 0\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCross);\nexport default __webpack_public_path__ + \"static/media/Cross.d96ad4a6.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\"\nimport { ReactComponent as SVGCross } from \"./Cross.svg\"\nimport \"./Cross.css\"\n\nexport const Cross = (props) => <SVGCross {...props} />\n","import React from \"react\"\nimport { Cross } from \"./Cross\"\nimport PropTypes from \"prop-types\"\nimport \"./Cell.css\"\n\nexport const Cell = ({ text, index, crossed, crossDispatch }) => {\n    return (\n        <div className=\"cell\" onClick={() => crossDispatch(index)}>\n            <div className=\"text\">\n                <Cross style={{ display: crossed ? \"inline-block\" : \"none\" }} />\n            </div>\n            {text}\n        </div>\n    )\n}\n\nCell.propTypes = {\n    text: PropTypes.string,\n    index: PropTypes.any,\n    crossed: PropTypes.bool,\n    crossDispatch: PropTypes.func,\n}\n","import React, { useReducer } from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"./Bingo.css\"\nimport { Cell } from \"./Cell\"\n\nexport const Bingo = ({ phrases }) => {\n    const lineLength = Math.sqrt(phrases.length)\n\n    const [state, crossDispatch] = useReducer((state, { r, c }) => {\n        const newCrossMatrix = [...state.crossMatrix]\n        newCrossMatrix[r][c].checked = true\n        return {\n            ...state,\n            crossMatrix: newCrossMatrix,\n        }\n    }, {\n        crossMatrix: {},\n        bingoCount: 0,\n    }, () => {\n        return {\n            crossMatrix: phrases.reduce((acc, text, i) => {\n                const currentLine = Math.trunc(i / lineLength)\n                const cell = { text, checked: false }\n                acc[currentLine] = [...(acc[currentLine] || []), cell]\n                return acc\n            }, [])\n        }\n    })\n\n    return (\n        <table className=\"bingo\">\n            <tbody>\n                {state.crossMatrix.map((line, rowNum) => (\n                    <tr key={rowNum}>\n                        {line.map(({ text, checked }, colNum) => {\n                            const cellIndex = { r: rowNum, c: colNum }\n                            return (\n                                <td key={`${colNum}-${text}`}>\n                                    <Cell\n                                        text={text}\n                                        index={cellIndex}\n                                        crossed={checked}\n                                        crossDispatch={crossDispatch}\n                                    />\n                                </td>)\n                        })}\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    )\n}\n\nBingo.propTypes = {\n    phrases: PropTypes.arrayOf(PropTypes.string)\n}","import React from \"react\";\nimport \"./App.css\";\nimport { Bingo } from \"./Bingo\";\nimport { phrases } from \"./data\";\n\nconst randomizedData = phrases\n    .map(p => ({ text: p, sort: Math.random() }))\n    .sort((a, b) => a.sort - b.sort)\n    .map(p => p.text)\n    .slice(0, 25)\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <Bingo phrases={randomizedData} />\n    </div>\n  );\n}\n","export const phrases = [\n    //    Mask\n    \"I made a mask for myself\",\n    \"They thought I wanted to rob a shop because of my mask\",\n    \"I left my mask at home when I went out\",\n    \"I ordered a custom mask\",\n    //  Money\n    \"I bought bitcoin\",\n    \"I bought shares\",\n    \"I bought foreign currency\",\n    \"I switched banks\",\n    \"I opened a new bank account\",\n    \"Bought concert tickets\",\n    \"Got ticket refund\",\n    \"Plane tickets were refunded\",\n    //  Work\n    \"Got a promotion\",\n    \"I worked from home\",\n    \"Got fired\",\n    \"Got a bonus\",\n    \"I worked outside\",\n    \"I always went to my workplace as I usually do\",\n    \"Worked remotely even though my company did not support this before\",\n    \"My salary was decreased\",\n    \"Got financial aid\",\n    \"Petted a dog in a video meeting\",\n    \"I started my own business\",\n    \"I went to an online conference\",\n    \"Worked without clothes\",\n    \"Worked in underwear\",\n    //  Cooking\n    \"Made a sourdough starter\",\n    \"Beaked bread\",\n    \"Cooked for myself\",\n    \"Cooked for my family\",\n    \"Named my sourdough starter\",\n    \"Ate the same food for 4 consecutive days\",\n    \"Cooked expired food from the fridge\",\n    \"Homemade pizza\",\n    \"Tasted my pet's food\",\n    //  Shopping\n    \"Could not find a parking spot near the mall\",\n    \"Bought more toilet paper than I usually do\",\n    \"Wanted to buy something but others took it all\",\n    \"Pretended I was over 65 years old.\",\n    \"Wanted to buy yeast, but could not find any\",\n    \"Ordered food with a discount related to quarantine\",\n    \"Got sent out of a shop because I was not the proper age\",\n    \"Did not let me in a shop because of my age\",\n    //  News\n    \"Listened to the official source of quarantine related information\",\n    \"Started to listen to a new podcast\",\n    \"Installed a tracker app\",\n    //  Hobbies\n    \"Watched a whole new series while I was at home\",\n    \"Went to a place to relax I've never been before\",\n    \"Went to the nearest park and it was overcrowded\",\n    \"Went to run\",\n    \"Started a new hobby\",\n    \"Made a quarantine related data visualization\",\n    \"Workout outside\",\n    \"Workout at home\",\n    \"Stopped shaving\",\n    \"Played online board game with friends or family\",\n    \"Painted a picture\",\n    \"Draw something with chalk\",\n    \"Read a book in one day\",\n    \"Meditated\",\n    \"Took online yoga class\",\n    \"Bought a puzzle\",\n    \"Put together a puzzle in one day\",\n    \"Started to learn a new language\",\n    \"Discovered TikTok\",\n    \"Learned a TikTok dance\",\n    \"Took an online course\",\n    \"Reread a favourite book\",\n    \"Rewatched a favourite movie\",\n    \"Rewatched a favourite TV series\",\n    \"Bought an instrument\",\n    \"Started a journal\",\n    \"Planned the week ahead\",\n    //  Emotions\n    \"Spent a day without seeing the sunlight\",\n    \"Spent a week without seeing the sunlight\",\n    \"Neighbour drilled the wall for a day\",\n    \"Neighbour drilled the wall for a week\",\n    \"Heard the neighbours having fun\",\n    \"Had an emotional breakdown\",\n    \"Days felt the same for a week\",\n    \"Accidentally locked myself out\",\n    \"Could not leave the house\",\n    \"Talked to a neighbour I hadn't talk to before\",\n    \"Talked to a neighbour\",\n    \"Went on virtual therapy\",\n    \"Forgot whether I washed my teeth or not\",\n    \"Forgot what day it was\",\n    \"Went to the fridge to see if something has changed in it\",\n    \"Watched a movie with a crowd scene and felt bad\",\n    \"Judged someone for not social distancing\",\n    \"Sent a postcard\",\n    \"Felt lonely\",\n    \"Got emotional support\",\n    \"Ran out of alcoholic drinks\",\n    \"Counted the days in the wall\",\n    \"Texted my ex\",\n    \"Forgot how to engage in a conversation\",\n    \"Stared at the rain\",\n    \"Stared at the snow\",\n    \"Stared at the clouds\",\n    \"Cried\",\n    //  Travel\n    \"Cancelled a trip\",\n    \"Went on a trip\",\n    \"Went on a tour in street view\",\n    //  Health\n    \"Touched my face\",\n    \"Washed my hands for 30 seconds\",\n    \"Washed my hands for 60 seconds\",\n    \"Washed my hands for 120 seconds\",\n    \"Stopped myself from touching my face\",\n    \"I was in a hospital\",\n    \"I was infected with the virus\",\n    \"I started a new diet\",\n    \"I realized I was infected after it was over\",\n    \"Disinfected the disinfectant\",\n    \"Skipped showering\",\n    \"Ate only crackers the whole day\",\n    \"Set a reminder to shower\",\n    \"Set a reminder to have lunch\",\n    \"Set a reminder to have dinner\",\n    \"Set a reminder to have breakfast\",\n    \"Got fat\",\n    \"Got skinny\",\n    \"I feel healthier since the lockdown started\",\n    \"I feel less healthy since the lockdown started\",\n]\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}